{"version":3,"sources":["components/Layout/Banners/BannerCheckout.module.css","components/Checkout/CheckoutForm.module.css","components/Checkout/CheckoutCompleted.module.css","components/UI/Spinner.module.css","components/Layout/Banners/BannerCheckout.js","hooks/use-input.js","components/Checkout/CheckoutForm.js","components/Checkout/CheckoutCompleted.js","components/UI/Spinnner.js","components/Checkout/Checkout.js"],"names":["module","exports","BannerCheckout","className","classes","useInput","validate","useState","enteredValue","setEnteredValue","valueIsTouched","setValueIsTouched","isValid","valueChangeHandler","e","target","value","valueBlurHandler","hasError","resetInput","CheckoutForm","dispatch","useDispatch","cartState","useSelector","state","cart","console","log","isNameValid","test","enteredName","nameChangeHandler","nameBlurHandler","nameIsValid","nameHasError","resetNameInput","enteredLastName","lastNameChangeHandler","lastNameBlurHandler","lastNameIsValid","lastNameHasError","resetLastNameInput","enteredEmail","emailChangeHandler","emailBlurHandler","emailIsValid","emailHasError","resetEmailInput","enteredAddress","addressChangeHandler","addressBlurHandler","addressIsValid","addressHasError","resetAddressInput","enteredZipCode","zipCodeChangeHandler","zipCodeBlurHandler","zipCodeIsValid","zipCodeHasError","resetZipCodeInput","enteredPhone","phoneChangeHandler","phoneBlurHandler","phoneIsValid","phoneHasError","resetPhoneInput","isFormValid","generateErrClass","onSubmit","preventDefault","cartActions","submitCart","form","htmlFor","type","id","onChange","onBlur","err","disabled","CheckoutCompleted","props","to","Spinner","spinner","enableBackground","viewBox","xmlns","cx","cy","fill","r","rx","ry","Checkout","isSubmitted","isLoading","setIsLoading","useEffect","timer","setTimeout","clearTimeout","window","scrollTo","spinnerClasses"],"mappings":"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","file":"static/js/4.9fc349f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner-checkout\":\"BannerCheckout_banner-checkout__1l6dv\",\"banner-text\":\"BannerCheckout_banner-text__1BW3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-section\":\"CheckoutForm_form-section__4jLXP\",\"form\":\"CheckoutForm_form__1PpuF\",\"form-container\":\"CheckoutForm_form-container__1HAov\",\"form-control\":\"CheckoutForm_form-control___o7Jw\",\"form-actions\":\"CheckoutForm_form-actions__3d_Sx\",\"err\":\"CheckoutForm_err__3_Uzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"completed-section\":\"CheckoutCompleted_completed-section__1zEUq\",\"completed-container\":\"CheckoutCompleted_completed-container__3tk8g\",\"slide-down\":\"CheckoutCompleted_slide-down__3XwAb\",\"completed-img\":\"CheckoutCompleted_completed-img__188nE\",\"completed-text\":\"CheckoutCompleted_completed-text__3U1BW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__19owv\",\"rotate\":\"Spinner_rotate__1Fwy5\"};","import classes from './BannerCheckout.module.css';\r\n\r\nconst BannerCheckout = () => {\r\n  return (\r\n    <div className={classes['banner-checkout']}>\r\n      <div className={classes['banner-text']}>\r\n        <h2>Checkout</h2>\r\n        <p>\r\n          Enter your credentials and and enjoy delivery straight to your\r\n          doorstep all throughout Norway!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerCheckout;\r\n","import { useState } from 'react';\r\n\r\nconst useInput = (validate) => {\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n  const [valueIsTouched, setValueIsTouched] = useState(false);\r\n\r\n  const valueChangeHandler = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n\r\n  const valueBlurHandler = (e) => {\r\n    setValueIsTouched(true);\r\n  };\r\n\r\n  const isValid = validate(enteredValue);\r\n  const hasError = !isValid && valueIsTouched;\r\n\r\n  const resetInput = () => {\r\n    setValueIsTouched(false);\r\n    setEnteredValue('');\r\n  };\r\n\r\n  return {\r\n    enteredValue,\r\n    valueChangeHandler,\r\n    valueBlurHandler,\r\n    isValid,\r\n    hasError,\r\n    resetInput,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import BannerCheckout from '../Layout/Banners/BannerCheckout';\r\nimport classes from './CheckoutForm.module.css';\r\n\r\nimport useInput from '../../hooks/use-input';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cartActions } from '../../store/cart-slice';\r\n\r\nconst CheckoutForm = () => {\r\n  // ------- VALIDATION -------\r\n  const dispatch = useDispatch();\r\n\r\n  const cartState = useSelector((state) => state.cart);\r\n  console.log('cart', cartState);\r\n\r\n  const isNameValid = (value) => {\r\n    const regex = /^[a-z ,.'-]+$/i;\r\n    return regex.test(value);\r\n  };\r\n\r\n  const isEmailValid = (value) => {\r\n    const regex = /^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}/g;\r\n    return regex.test(value);\r\n  };\r\n\r\n  const isAddressValid = (value) => {\r\n    const regex = /^[#.0-9a-zA-Z\\s,-]+$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  const isZipCodeValid = (value) => {\r\n    const regex = /^\\d{4}$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  const isPhoneValid = (value) => {\r\n    const regex = /^(\\+)?[0-9]{8,12}$/;\r\n    return regex.test(value);\r\n  };\r\n\r\n  const {\r\n    enteredValue: enteredName,\r\n    valueChangeHandler: nameChangeHandler,\r\n    valueBlurHandler: nameBlurHandler,\r\n    isValid: nameIsValid,\r\n    hasError: nameHasError,\r\n    resetInput: resetNameInput,\r\n  } = useInput(isNameValid);\r\n\r\n  const {\r\n    enteredValue: enteredLastName,\r\n    valueChangeHandler: lastNameChangeHandler,\r\n    valueBlurHandler: lastNameBlurHandler,\r\n    isValid: lastNameIsValid,\r\n    hasError: lastNameHasError,\r\n    resetInput: resetLastNameInput,\r\n  } = useInput(isNameValid);\r\n\r\n  const {\r\n    enteredValue: enteredEmail,\r\n    valueChangeHandler: emailChangeHandler,\r\n    valueBlurHandler: emailBlurHandler,\r\n    isValid: emailIsValid,\r\n    hasError: emailHasError,\r\n    resetInput: resetEmailInput,\r\n  } = useInput(isEmailValid);\r\n\r\n  const {\r\n    enteredValue: enteredAddress,\r\n    valueChangeHandler: addressChangeHandler,\r\n    valueBlurHandler: addressBlurHandler,\r\n    isValid: addressIsValid,\r\n    hasError: addressHasError,\r\n    resetInput: resetAddressInput,\r\n  } = useInput(isAddressValid);\r\n\r\n  const {\r\n    enteredValue: enteredZipCode,\r\n    valueChangeHandler: zipCodeChangeHandler,\r\n    valueBlurHandler: zipCodeBlurHandler,\r\n    isValid: zipCodeIsValid,\r\n    hasError: zipCodeHasError,\r\n    resetInput: resetZipCodeInput,\r\n  } = useInput(isZipCodeValid);\r\n\r\n  const {\r\n    enteredValue: enteredPhone,\r\n    valueChangeHandler: phoneChangeHandler,\r\n    valueBlurHandler: phoneBlurHandler,\r\n    isValid: phoneIsValid,\r\n    hasError: phoneHasError,\r\n    resetInput: resetPhoneInput,\r\n  } = useInput(isPhoneValid);\r\n\r\n  let isFormValid = false;\r\n  if (\r\n    nameIsValid &&\r\n    lastNameIsValid &&\r\n    emailIsValid &&\r\n    addressIsValid &&\r\n    phoneIsValid &&\r\n    zipCodeIsValid\r\n  ) {\r\n    isFormValid = true;\r\n    console.log(isFormValid);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isFormValid) return;\r\n\r\n    if (isFormValid) {\r\n      dispatch(cartActions.submitCart(true));\r\n    }\r\n\r\n    resetNameInput();\r\n    resetLastNameInput();\r\n    resetEmailInput();\r\n    resetAddressInput();\r\n    resetPhoneInput();\r\n    resetZipCodeInput();\r\n  };\r\n\r\n  const generateErrClass = (hasError) => {\r\n    return hasError ? 'invalid' : '';\r\n  };\r\n\r\n  return (\r\n    <section className={classes['form-section']}>\r\n      <BannerCheckout />\r\n      <form onSubmit={submitHandler} className={classes.form}>\r\n        <div className={classes['form-container']}>\r\n          <div className={classes['form-control']}>\r\n            <label htmlFor=\"first-name\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"first-name\"\r\n              onChange={nameChangeHandler}\r\n              onBlur={nameBlurHandler}\r\n              value={enteredName}\r\n              className={generateErrClass(nameHasError)}\r\n            />\r\n            {nameHasError && (\r\n              <p className={classes.err}>Field must contain letters [a-zA-Z]</p>\r\n            )}\r\n          </div>\r\n          <div className={classes['form-control']}>\r\n            <label htmlFor=\"last-name\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"last-name\"\r\n              onChange={lastNameChangeHandler}\r\n              onBlur={lastNameBlurHandler}\r\n              value={enteredLastName}\r\n              className={generateErrClass(lastNameHasError)}\r\n            />\r\n            {lastNameHasError && (\r\n              <p className={classes.err}>Field must contain letters [a-zA-Z]</p>\r\n            )}\r\n          </div>\r\n          <div className={classes['form-control']}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={emailChangeHandler}\r\n              onBlur={emailBlurHandler}\r\n              value={enteredEmail}\r\n              className={generateErrClass(emailHasError)}\r\n            />\r\n            {emailHasError && (\r\n              <p className={classes.err}>Please enter a valid e-mail address</p>\r\n            )}\r\n          </div>\r\n          <div className={classes['form-control']}>\r\n            <label htmlFor=\"address\">Address</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              onChange={addressChangeHandler}\r\n              onBlur={addressBlurHandler}\r\n              value={enteredAddress}\r\n              className={generateErrClass(addressHasError)}\r\n            />\r\n            {addressHasError && (\r\n              <p className={classes.err}>Please enter a valid address</p>\r\n            )}\r\n          </div>\r\n          <div className={classes['form-control']}>\r\n            <label htmlFor=\"zip-code\">Zip Code</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"zip-code\"\r\n              onChange={zipCodeChangeHandler}\r\n              onBlur={zipCodeBlurHandler}\r\n              value={enteredZipCode}\r\n              className={generateErrClass(zipCodeHasError)}\r\n            />\r\n            {zipCodeHasError && (\r\n              <p className={classes.err}>Field must be 4 digits long</p>\r\n            )}\r\n          </div>\r\n          <div className={classes['form-control']}>\r\n            <label htmlFor=\"phone\">Phone Number</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"phone\"\r\n              onChange={phoneChangeHandler}\r\n              onBlur={phoneBlurHandler}\r\n              value={enteredPhone}\r\n              className={generateErrClass(phoneHasError)}\r\n            />\r\n            {phoneHasError && (\r\n              <p className={classes.err}>\r\n                Field can start with '+' sign, and must be 8-12 digits long\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className={classes['form-actions']}>\r\n            <button type=\"button\" className=\"btn-outline\">\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className={'btn-secondary'}\r\n              disabled={!isFormValid}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import { Link } from 'react-router-dom';\r\nimport classes from './CheckoutCompleted.module.css';\r\n\r\nconst CheckoutCompleted = (props) => {\r\n  return (\r\n    <section className={`${props.className} ${classes['completed-section']}`}>\r\n      <div className={classes['completed-container']}>\r\n        <div className={classes['completed-img']}></div>\r\n\r\n        <div className={classes['completed-text']}>\r\n          <h3>Thank you!</h3>\r\n          <hr />\r\n          <p>\r\n            Your order was completed successfully. You should soon receive an\r\n            email with payment instructions.\r\n          </p>\r\n          <div className={classes['completed-actions']}>\r\n            <Link to=\"/menu\">\r\n              <button type=\"button\" className=\"btn-section\">\r\n                Continue\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CheckoutCompleted;\r\n","import classes from './Spinner.module.css';\r\n\r\nconst Spinner = (props) => {\r\n  return (\r\n    <div className={`${props.className} ${classes.spinner}`}>\r\n      <svg\r\n        id=\"Capa_1\"\r\n        enableBackground=\"new 0 0 497 497\"\r\n        viewBox=\"0 0 497 497\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g>\r\n          <circle cx=\"98\" cy=\"376\" fill=\"#A6D593\" r=\"53\" />\r\n          <circle cx=\"439\" cy=\"336\" fill=\"#C6E4BA\" r=\"46\" />\r\n          <circle cx=\"397\" cy=\"112\" fill=\"#DAEED2\" r=\"38\" />\r\n          <ellipse\r\n            cx=\"56.245\"\r\n            cy=\"244.754\"\r\n            fill=\"#99CF83\"\r\n            rx=\"56.245\"\r\n            ry=\"54.874\"\r\n          />\r\n          <ellipse\r\n            cx=\"217.821\"\r\n            cy=\"447.175\"\r\n            fill=\"#A6D593\"\r\n            rx=\"51.132\"\r\n            ry=\"49.825\"\r\n          />\r\n          <ellipse\r\n            cx=\"349.229\"\r\n            cy=\"427.873\"\r\n            fill=\"#B0D99F\"\r\n            rx=\"48.575\"\r\n            ry=\"47.297\"\r\n          />\r\n          <ellipse\r\n            cx=\"117.092\"\r\n            cy=\"114.794\"\r\n            fill=\"#80C365\"\r\n            rx=\"58.801\"\r\n            ry=\"57.397\"\r\n          />\r\n          <ellipse\r\n            cx=\"453.538\"\r\n            cy=\"216.477\"\r\n            fill=\"#D2EAC8\"\r\n            rx=\"43.462\"\r\n            ry=\"42.656\"\r\n          />\r\n          {/* <circle cx=\"263\" cy=\"62\" fill=\"#4e5a61\" r=\"62\" /> */}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { Fragment } from 'react';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport CheckoutCompleted from './CheckoutCompleted';\r\nimport Spinner from '../UI/Spinnner';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Checkout = () => {\r\n  const isSubmitted = useSelector((state) => state.cart.isSubmitted);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // ------- SPINNER -------\r\n  useEffect(() => {\r\n    if (!isLoading) return;\r\n\r\n    const timer = setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [isSubmitted]);\r\n\r\n  const spinnerClasses = isLoading ? 'max-height' : 'hidden min-height';\r\n  return (\r\n    <Fragment>\r\n      <Spinner className={spinnerClasses} />\r\n      {isSubmitted && <CheckoutCompleted />}\r\n      {!isSubmitted && !isLoading && <CheckoutForm />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}